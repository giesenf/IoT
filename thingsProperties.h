// Code generated by Arduino IoT Cloud, DO NOT EDIT.

#include <ArduinoIoTCloud.h>
#include <Arduino_ConnectionHandler.h>

const char DEVICE_LOGIN_NAME[]  = "<YOUR_DEVICE_LOGIN_NAME>";

const char SSID[]               = SECRET_SSID;    // Network SSID (name)
const char PASS[]               = SECRET_OPTIONAL_PASS;    // Network password (use for WPA, or use as key for WEP)
const char DEVICE_KEY[]  = SECRET_DEVICE_KEY;    // Secret device password

void onCurrentTotalLightChange();
void onMinimumLightThresholdChange();
void onMinimumWaterThresholdChange();
void onPredictedLightChange();
void onTotalLightChange();
void onLedOnChange();

float current_total_light;
float internal_hum;
float internal_temp;
float light_value;
float minimum_light_threshold;
float minimum_water_threshold;
float outdoor_hum;
float outdoor_temp;
float predicted_light;
float soil_moisture;
float total_light;
bool led_on;
bool need_water;

void initProperties(){

  ArduinoCloud.setBoardId(DEVICE_LOGIN_NAME);
  ArduinoCloud.setSecretDeviceKey(DEVICE_KEY);
  ArduinoCloud.addProperty(current_total_light, READWRITE, 10 * SECONDS, onCurrentTotalLightChange);
  ArduinoCloud.addProperty(internal_hum, READ, 10 * SECONDS, NULL);
  ArduinoCloud.addProperty(internal_temp, READ, 10 * SECONDS, NULL);
  ArduinoCloud.addProperty(light_value, READ, 10 * SECONDS, NULL);
  ArduinoCloud.addProperty(minimum_light_threshold, READWRITE, 10 * SECONDS, onMinimumLightThresholdChange);
  ArduinoCloud.addProperty(minimum_water_threshold, READWRITE, ON_CHANGE, onMinimumWaterThresholdChange);
  ArduinoCloud.addProperty(outdoor_hum, READ, 10 * SECONDS, NULL);
  ArduinoCloud.addProperty(outdoor_temp, READ, 10 * SECONDS, NULL);
  ArduinoCloud.addProperty(predicted_light, READWRITE, 10 * SECONDS, onPredictedLightChange);
  ArduinoCloud.addProperty(soil_moisture, READ, 10 * SECONDS, NULL);
  ArduinoCloud.addProperty(total_light, READWRITE, 10 * SECONDS, onTotalLightChange);
  ArduinoCloud.addProperty(led_on, READWRITE, ON_CHANGE, onLedOnChange);
  ArduinoCloud.addProperty(need_water, READ, ON_CHANGE, NULL);

}

WiFiConnectionHandler ArduinoIoTPreferredConnection(SSID, PASS);
